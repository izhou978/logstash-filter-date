/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: "java"
apply plugin: "distribution"
apply plugin: "idea"

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath group: 'org.jruby', name: 'jruby-complete', version: "1.7.26"
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile group: "org.apache.logging.log4j", name: "log4j-api", version: "2.6.2"
  compile group: "org.apache.logging.log4j", name: "log4j-core", version: "2.6.2"
  compile group: "joda-time", name: "joda-time", version: "2.9.4"
  compile group: 'junit', name: 'junit', version: '4.12'

  // XXX: Remove this.
  compile files('jar/logstash-core-event-java.jar')
}


dependencies {
  compile group: 'org.jruby', name: 'jruby-complete', version: "1.7.26"
  runtime group: 'org.jruby', name: 'jruby-complete', version: "1.7.26"
  testCompile group: 'org.jruby', name: 'jruby-complete', version: "1.7.26"
}

task rubyBootstrap << {
  description "Try bundler"
  def jruby = new org.jruby.embed.ScriptingContainer()
  def paths = jruby.getLoadPaths()
  paths.add("${projectDir}/lib".getStrings()[0])
  jruby.setLoadPaths(paths)
  jruby.getEnvironment().put("GEM_HOME", "${buildDir}/ruby".toString())
  jruby.getEnvironment().put("GEM_SPEC_CACHE", "${buildDir}/cache".toString())
  jruby.getEnvironment().put("GEM_PATH", "${buildDir}/ruby".toString())
  jruby.runScriptlet(org.jruby.embed.PathType.ABSOLUTE, "${projectDir}/buildSrc/src/main/ruby/bootstrap.rb")
  jruby.runScriptlet("bundler()")
}

task rubyTest(dependsOn: rubyBootstrap) << {
  def jruby = new org.jruby.embed.ScriptingContainer()
  def paths = jruby.getLoadPaths()
  paths.add("${projectDir}/lib".getStrings()[0])
  jruby.setLoadPaths(paths)
  jruby.getEnvironment().put("GEM_HOME", "${buildDir}/ruby".toString())
  jruby.getEnvironment().put("GEM_SPEC_CACHE", "${buildDir}/cache".toString())
  jruby.getEnvironment().put("GEM_PATH", "${buildDir}/ruby".toString())
  jruby.runScriptlet(configurations.runtime.collect { r -> "require '${r}'" }.join("\n"))
  println configurations.runtime.collect { r -> "require '${r}'" }.join("\n")
  jruby.runScriptlet("require 'java'\n"
          "require 'rspec/core/runner'\n" +
          "require 'rspec'\n" +
          "RSpec::Core::Runner.run(['./spec/'])\n")
}

//bootstrap.dependsOn(":logstash-core-event-java:copyGemjar")
//bootstrap.dependsOn(":logstash-core:jar")
//bootstrap.dependsOn("copyDependencyJars")

//task copyDependencyJars(type: Copy) {
  //into "${projectDir}/vendor/jars"
  //from configurations.runtime
//}

